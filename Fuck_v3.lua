---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Acer.
--- DateTime: 2021/7/3 22:06
---

--- Plugins Info ---
script_name('Fuck_v3')
script_authors('Weidu')
script_version('3.0.0')
script_description('QQ: 487432640')
--- Plugins Info ---

local event = require("lib.samp.events") --- @Events
local Vector3D = require ("lib.vector3d") --- @Vector3D

local switch = false --- @Bool 指定目标
local switch_all = false --- @Bool 全屏目标

local speed = 99.98 --- @number 汽车速度
local tid = 0 --- @number 指定玩家ID




--- @Main
function main()
    repeat wait(0) until isSampAvailable() wait(3000)
    sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {05FB00}加载成功...', -1)
    sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {05FB00}By Weidu QQ:487432640', -1)
    sampRegisterChatCommand('.fk', fk)
    sampRegisterChatCommand('.fka', fuck_all)
    while true do wait(0)
        if (switch ~= false) and isCharOnFoot(PLAYER_PED) then
            switch = false
            sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}你离开了汽车，插件已停止执行', -1)
        end
        if (switch_all ~= false) and isCharOnFoot(PLAYER_PED) then
            switch_all = false
            sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}你离开了汽车，插件已停止执行', -1)
        end
    end
end

--- @fk
function fk(args)
    if switch then
        switch = false
        return sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}关闭！', -1)
    end
    if not string.match(args, '%d+') then
        sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}请输入/.fk [id]', -1)
    else
        local _, ped = sampGetCharHandleBySampPlayerId(args)
        if not _ then
            sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}指定的玩家不在范围内或者不在线！', -1)
        else
            if isCharOnFoot(PLAYER_PED) then
                sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}你一定要在汽车内！', -1)
            else
                if isCharOnFoot(ped) then
                    return sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}对方一定要在汽车内！', -1)
                else
                    tid = tonumber(args)
                    switch = true
                    lua_thread.create(function()
                        while switch do
                            wait(0)
                            local _, ped = sampGetCharHandleBySampPlayerId(args)
                            if not _ then
                                switch = false
                                return sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}停止执行，玩家被R飞或者离开了范围', -1)
                            end
                        end
                    end)
                    sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {05FB00}开启！', -1)
                end
            end
        end
    end
end

--- @fuck_all
function fuck_all()
    if switch_all then
        switch_all = false
        sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}Fuck All 关闭！', -1)
    else
        if isCharOnFoot(PLAYER_PED) then
            sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {F70202}你一定要在汽车内！', -1)
        else
            switch_all = true
            sampAddChatMessage('{F61D00}[{00F8FA}Fuck_v3{F61D00}]: {05FB00}Fuck All 开启！按右键激活！', -1)
        end
    end
end

function event.onVehicleSync(id)
    if switch then
        if id == tid then
            local _, ped = sampGetCharHandleBySampPlayerId(id)
            if _ then
                local sync = samp_create_sync_data('vehicle')
                local tX, tY, tZ = getCharCoordinates(ped)
                local cameraCoordinates = Vector3D(getActiveCameraCoordinates())
                local cameraPointAt = Vector3D(getActiveCameraPointAt())
                local warpDirection = cameraPointAt - cameraCoordinates
                warpDirection = warpDirection * speed
                sync.position.x = tX + 2
                sync.position.y = tY
                sync.position.z = tZ
                sync.moveSpeed['x'], sync.moveSpeed['y'], sync.moveSpeed['z'] = warpDirection:get()
                sync.send()
                printStringNow('~Y~Fuck ~B~By Weidu ~R~~>~[ID: ' .. id .. ']~<~', 1000)
            end
        end
    end
end

function event.onSendVehicleSync(data)
    if switch_all then
        local X, Y, Z = getCharCoordinates(PLAYER_PED) --- 获取玩家坐标 @PLTAYER_PED
        local _, ped = findAllRandomCharsInSphere(X, Y, Z, 10000, true, false)
        local _, show = sampGetPlayerIdByCharHandle(ped)
        if _ then
            if isKeyDown(0x02) then --- 右键
                local tX, tY, tZ = getCharCoordinates(ped)
                local cameraCoordinates = Vector3D(getActiveCameraCoordinates())
                local cameraPointAt = Vector3D(getActiveCameraPointAt())
                local warpDirection = cameraPointAt - cameraCoordinates
                warpDirection = warpDirection * speed
                data.position.x = tX + 2
                data.position.y = tY
                data.position.z = tZ
                data.moveSpeed['x'], data.moveSpeed['y'], data.moveSpeed['z'] = warpDirection:get()
                printStringNow('~Y~Fuck All ~B~By Weidu ~R~~>~[ID: ' .. show .. ']~<~', 1000)
            end
        end
    end
end

function event.onRemovePlayerFromVehicle()
    if switch then
        return false
    end
end

--- @samp_create_sync_data
--- @module
--- @data
--- @sync_type
--- @copy_from_player
--- @raknet
function samp_create_sync_data(sync_type, copy_from_player)
    local ffi = require 'ffi'
    local sampfuncs = require 'sampfuncs'
    --- 来自 SAMP.Lua封装依赖项
    local raknet = require 'samp.raknet'
    require 'samp.synchronization'
    copy_from_player = copy_from_player or true
    local sync_traits = {
        player = { 'PlayerSyncData', raknet.PACKET.PLAYER_SYNC, sampStorePlayerOnfootData },
        vehicle = { 'VehicleSyncData', raknet.PACKET.VEHICLE_SYNC, sampStorePlayerIncarData },
        passenger = { 'PassengerSyncData', raknet.PACKET.PASSENGER_SYNC, sampStorePlayerPassengerData },
        aim = { 'AimSyncData', raknet.PACKET.AIM_SYNC, sampStorePlayerAimData },
        trailer = { 'TrailerSyncData', raknet.PACKET.TRAILER_SYNC, sampStorePlayerTrailerData },
        unoccupied = { 'UnoccupiedSyncData', raknet.PACKET.UNOCCUPIED_SYNC, nil },
        bullet = { 'BulletSyncData', raknet.PACKET.BULLET_SYNC, nil },
        spectator = { 'SpectatorSyncData', raknet.PACKET.SPECTATOR_SYNC, nil },
        passenger = { 'PassengerSyncData', raknet.PACKET.PASSENGER_SYNC, nil }
    }
    local sync_info = sync_traits[sync_type]
    local data_type = 'struct ' .. sync_info[1]
    local data = ffi.new(data_type, {})
    local raw_data_ptr = tonumber(ffi.cast('uintptr_t', ffi.new(data_type .. '*', data)))
    --- 将玩家的同步数据复制到分配的内存中
    if copy_from_player then
        local copy_func = sync_info[3]
        if copy_func then
            local _, player_id
            if copy_from_player == true then
                _, player_id = sampGetPlayerIdByCharHandle(PLAYER_PED)
            else
                player_id = tonumber(copy_from_player)
            end
            copy_func(player_id, raw_data_ptr)
        end
    end
    --- 发送数据包
    local func_send = function()
        local bs = raknetNewBitStream()
        raknetBitStreamWriteInt8(bs, sync_info[2])
        raknetBitStreamWriteBuffer(bs, raw_data_ptr, ffi.sizeof(data))
        raknetSendBitStreamEx(bs, sampfuncs.HIGH_PRIORITY, sampfuncs.UNRELIABLE_SEQUENCED, 1)
        raknetDeleteBitStream(bs)
    end
    --- 访问同步数据元表
    local mt = {
        __index = function(t, index)
            return data[index]
        end,
        __newindex = function(t, index, value)
            data[index] = value
        end
    }
    return setmetatable({ send = func_send }, mt)
end
